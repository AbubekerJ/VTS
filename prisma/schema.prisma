generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  name         String
  email        String  @unique
  password     String?
  role         Role
  managerId    String?
  manager      User?   @relation("UserHierarchy", fields: [managerId], references: [id])
  subordinates User[]  @relation("UserHierarchy")

  visitsAsCoordinator Visit[] @relation("CoordinatorVisits")
  visitsScheduled     Visit[] @relation("ScheduledVisits")

  createdAt DateTime  @default(now())
  partners  Partner[] @relation("ManagerPartners")
}

model Visit {
  id            String @id @default(uuid())
  coordinatorId String
  coordinator   User   @relation(name: "CoordinatorVisits", fields: [coordinatorId], references: [id])

  scheduledById String
  scheduledBy   User   @relation(name: "ScheduledVisits", fields: [scheduledById], references: [id])

  partnerId String
  partner   Partner @relation(fields: [partnerId], references: [id])

  visitDate    DateTime
  status       VisitStatus
  notes        String?
  checkInDate  DateTime?
  checkOutDate DateTime?
  createdAt    DateTime    @default(now())
  VisitIssue   Json?
}

model Partner {
  id        String   @id @default(uuid())
  name      String
  latitude  Float
  longitude Float
  contact   String?
  visits    Visit[]
  createdAt DateTime @default(now())
  managerId String
  manager   User     @relation("ManagerPartners", fields: [managerId], references: [id])
}

model Issue {
  id          String   @id @default(uuid())
  description String
  createdAt   DateTime @default(now())
}

enum Role {
  ADMIN
  DIRECTOR
  IDC_MANAGER
  POS_COORDINATOR
}

enum VisitStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
